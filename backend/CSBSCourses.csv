course_code,title,description,prerequisites,credit_hours,major,require,year_level
MATH 101,SINGLE VARIABLE CALCULUS I,"Limits, continuity, differentiation, integration, and the Fundamental Theorem of Calculus.",None,3,COMP,Yes,Freshman
MATH 102,SINGLE VARIABLE CALCULUS II,"Continuation of MATH 101. Includes further techniques of integration, as well as infinite sequences and series, Taylor polynomials and Taylor series, parametric equations, arc length, polar coordinates, complex numbers, and Fourier polynomials.",,3,COMP,Yes,Freshman
MATH 212,MULTIVARIABLE CALCULUS,"Calculus of multiple variables. Vectors, partial derivatives and gradients, double and triple integrals, vector fields, line and surface integrals, Green's theorem, Stokes's theorem, and Gauss's theorem.",,3,COMP,Yes,Sophomore
STAT 310,PROBABILITY AND STATISTICS,"Probability and the central concepts and methods of statistics including probability, random variables, distributions of random variables, expectation, sampling distributions, estimation, confidence intervals, and hypothesis testing.",,3-4,COMP,Yes,Sophomore
MATH 355,LINEAR ALGEBRA,"Systems of linear equations, matrices, vector spaces, linear transformations, determinants, inner products, eigenvalues and eigenvectors, and the Spectral Theorem for real symmetric matrices.",,3,COMP,Yes,Junior
COMP 140,COMPUTATIONAL THINKING,"An introduction to computational problem solving designed to give an overview of computer science using real-world problems across a broad range of disciplines. Students learn how to think about these problems and how to structure effective solutions to them using computation. No programming knowledge is required or expected; students learn how to implement their solutions in Python. If you register for fully online section, you must have a webcam and you must take the exams in person.",,4,COMP,Yes,Freshman
COMP 182,ALGORITHMIC THINKING,"Algorithms are the engines of a great majority of systems, natural and artificial alike. This course introduces algorithmic thinking as a discipline for reasoning about systems, taming their complexities, and elucidating their properties. Algorithmic techniques, along with their correctness and efficiency, will be taught through reasoning about systems of interactions, such as markets, that are ubiquitous in our highly connected world.",,4,COMP,Yes,Freshman
COMP 215,INTRODUCTION TO PROGRAM DESIGN,"This course covers the principles of programming and program design. The course is organized around a number of individual programming assignments that fit together to complete a significant, real-world application. Each assignment emphasizes one or more of the basic principles of software design, including: encapsulation, abstraction, test-driven development, and functional and object-oriented programming. The Java programming language will be used. An introduction to the basics of the Java language itself (including Java syntax and semantics) will be provided.",,4,COMP,Yes,Sophomore
COMP 222,INTRODUCTION TO COMPUTER ORGANIZATION,"This course introduces students to the organization of computer systems in order that they gain an understanding of how a computer system executes their programs. Students will learn how to write small-scale programs in C, how to read the translation of those programs into assembly language, and how those programs are executed at the machine level. Specific topics covered will include data representation at the machine level, static versus dynamic memory allocation, instruction set architecture and the encoding of instructions in memory, linking relocatable object files to create executable files, pipelining within the processor, and caching within the memory system.",,4,COMP,Yes,Sophomore
COMP 301,COMPUTER ETHICS,"Given their growing power in the twenty-first century, computer scientists have duties both to society and their own profession to wield that power wisely and responsibly. In this discussion-and reflection-oriented course students will apply fundamentals of moral philosophy and social responsibility to current issues in computer science.",,3,COMP,Yes,Junior
COMP 312,INTRODUCTION TO PROGRAMMING LANGUAGES,"This course explores the design landscape of programming languages and compilers, with the primary goal of giving students skills and knowledge that will help them as practitioners. After completing the course, students should be able to evaluate the tradeoffs between different programming languages, choose the language that is best-suited to a given task, write code using the functional programming paradigm, and learn new languages more quickly. Specific topics covered include lexical and syntactic analysis, type systems, variable scopes and bindings, control flow structures, and functional programming. Case studies from modern programming languages will be used to illustrate a range of abstractions and design choices.",,3,COMP,Yes,Sophomore
COMP 318,CONCURRENT PROGRAM DESIGN,"Modern software systems are typically complex, event-driven, and require coordination across multiple components. Such systems require careful design to ensure that they uphold best practices in software design while supporting concurrency. This course will introduce principles of designing large-scale concurrent software and give students practice implementing these principles in the context of large-scale, highly concurrent software systems. Topics covered will include concurrency vs. parallelism, concurrency concepts and mechanisms, and principles of software design including encapsulation, composition, decoupling, and accessibility.",,4,COMP,Yes,Junior
COMP 321,INTRODUCTION TO COMPUTER SYSTEMS,"This course introduces computer systems from the programmer's perspective. Topics include data representation, the compilation process, and system-level programming concepts such as interrupts and concurrency. Formerly COMP 221.",,4,COMP,Yes,Sophomore
COMP 382,REASONING ABOUT ALGORITHMS,"Writing algorithms is fun, but how are you sure that the algorithm you wrote is flawless? Are there computing tasks for which it is impossible to produce an efficient algorithm, or, for that matter, any algorithm? To answer these questions, you have to learn to perform mathematical reasoning about algorithmic problems and solutions COMP 382 is an introduction to such reasoning techniques. Topics covered would include elementary logic, analysis of the correctness and efficiency of algorithms, and formal computational models like finite automata and Turning machines. On the way, you are also going to learn some new algorithm design techniques.",,4,COMP,Yes,Junior
COMP 416,GENOME-SCALE ALGORITHMS AND DATA STRUCTURES,"Since the advent of Sanger Sequencing in 1977, computer scientists have devised algorithms and software tools to interpret and analyze DNA sequences. The field of bioinformatics focuses on computational approaches to solving biological questions. This course serves both as an introduction to widely used algorithms in bioinformatics and a software design course. The class involves a semester-long software design and implementation project, emphasizing design patterns and high-performance computing. No prior knowledge of biology is assumed nor required.",,4,COMP,Yes,Senior
BIOS 201,Intro to Biology I,"The first in a series of two introductory biology courses (BIOS 201, BIOS 202). This course examines biochemistry, cell physiology, cell biology, Mendelian genetics, molecular genetics, developmental biology, plant biology, and neurobiology.",None,3,Yes,Yes,Freshman
CHEM 121,General Chemistry I,"Introduction of chemical phenomena emphasizing problems and methods in Chemistry. Either CHEM 121 or CHEM 151 may be taken as a prerequisite for higher study in chemistry, but only one of these may be taken for credit. Students must also register for CHEM 123 General Chemistry Laboratory I. The course and the co-requisite lab are graded jointly.",None,3,Yes,Yes,Freshman
CHEM 123,General Chemistry I Lab,Required laboratory component of CHEM 121. Students must also register for CHEM 121.,None,1,Yes,Yes,Freshman
BIOS 202,Intro to Biology II,"The second in a series of two introductory biology courses (BIOS 201, BIOS 202). This course examines the diversity of life, comparative animal physiology, evolution, ecology, and conservation. An emphasis is placed on evolution as a central framework necessary for a complete understanding of modern biology. Group discussions allow students to explore topics in more detail and discover how they are relevant to our everyday lives.",BIOS 201,3,Yes,Yes,Freshman
CHEM 122,Genereal Chemistry II,A continuation of CHEM 121.,CHEM 121,3,Yes,Yes,Freshman
CHEM 124,General Chemistry II Lab,Required laboratory component of CHEM 122. Students must also register for CHEM 122.,None,1,Yes,Yes,Freshman